# NOTE: Do not use 1e-6 format because this is reqognized as a string

# Framework Settings
pub_on_prop: true
use_ros_time_now: false
verbose: false
verbose_out_of_order: false
discard_ooo_prop_meas: false
pub_cov: true
pub_path: true
buffer_size: 2000
path_buffer_size: 10000

# Ros Settings
use_tcpnodelay: false
bypass_init_service: true

pub_cb_buffer_size: 1
sub_imu_cb_buffer_size: 200
sub_sensor_cb_buffer_size: 1

# Sensor Settings (default)
#gyro_rate_noise: 0.526188 # Noise STD [rad/s]
#gyro_bias_noise: 0.754667
#acc_noise: 0.89791        # Noise STD [m/s^2]
#acc_bias_noise: 0.28402

gyro_rate_noise: 0.001020
gyro_bias_noise: 0.000510
acc_noise: 0.020171
acc_bias_noise: 0.010086

# Sensor Settings
#gyro_rate_noise: 0.01 # Noise STD [rad/s]
#gyro_bias_noise: 0.001
#acc_noise: 0.5        # Noise STD [m/s^2]
#acc_bias_noise: 0.2


# multiplying gregs values by root(250)
#gyro_rate_noise: 0.0005 # Noise STD [rad/s] # noise_density
#gyro_bias_noise: 0.0000045 # random_walk
#acc_noise: 0.003935403      # Noise STD [m/s^2] # noise_density
#acc_bias_noise: 0.00005967  # random_walk

#gyro_rate_noise: 0.001 # Noise STD [rad/s] # noise_density
#gyro_bias_noise: 0.00001 # random_walk
#acc_noise: 0.005      # Noise STD [m/s^2] # noise_density
#acc_bias_noise: 0.01  # random_walk

# Core state covariance p,v,q,bw,ba
core_init_cov_p: [0.0005,0.0005,0.0005]
core_init_cov_v: [0.0003,0.0003,0.0003]
core_init_cov_q: [0.1218,0.1218,0.1218] # 20degree
core_init_cov_bw: [0.0076,0.0076,0.0076]
core_init_cov_ba: [0.01,0.01,0.01]

# Pose1 sensor settings
position1_pos_meas_noise: [0.005,0.005,0.005]
position1_use_dyn_meas_noise: false
position1_cal_p_ip: [0.0, 0.0, 0.0]
position1_state_init_cov: [0.00001,0.00001,0.00001]

# Initial Conditions

position1_orientation: [-0.89967213,-0.01799344,-0.05398033,0.43284226] # wxyz
core_init_bw: [-0.00017887829632291867, -0.0001628816946629663,  0.00008406851318945989] #bw
core_init_ba: [0.010202995473795839, -0.018204602123357966,  -0.01826727537311668] #ba

      #//q_wi_init, // quat
      #//Eigen::Quaterniond(-0.990946,-0.028449,-0.129984,-0.017908),
      #Eigen::Quaterniond(-0.89967213, -0.01799344, -0.05398033,  0.43284226 ), //w x y z
      #//Eigen::Quaterniond(-0.02928565,0.46679886 , 0.8826044 , -0.04744107 ), //w x y z
      #//Eigen::Quaterniond(-0.792, 0, 0, 0.611), //w x y z
      #//Eigen::Vector3d::Zero(),
      #//Eigen::Vector3d::Zero());
      #Eigen::Vector3d(-0.00017887829632291867, -0.0001628816946629663,  8.406851318945989e-05), //b_w
      #Eigen::Vector3d(0.010202995473795839, -0.018204602123357966,  -0.01826727537311668)); //b_a